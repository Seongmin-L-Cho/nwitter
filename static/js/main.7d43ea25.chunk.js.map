{"version":3,"sources":["fbase.js","route/Auth.js","component/Nweet.js","component/NweetFactory.js","route/Home.js","component/Navigation.js","route/Profile.js","component/Router.js","component/App.js","index.js"],"names":["auth","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","getDB","getFirestore","storageService","getStorage","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onSocialClick","event","a","name","target","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","onChange","value","onSubmit","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","type","placeholder","required","onClick","prev","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","document","doc","id","deleteDoc","attachmentURL","nweetImageRef","ref","deleteObject","updateDoc","toggleEditing","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","maxLength","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","newArray","docs","map","data","Navigation","to","displayName","Profile","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","push","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","ReactDOM","render","StrictMode","getElementById"],"mappings":"+NAsBaA,GADDC,YAXW,CACrBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAMWM,eACPC,EAAQC,cACRC,EAAiBC,c,OCmEfC,EAlFF,WACX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAGMC,EAAa,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,4DAKP,YAHDC,EACRF,EADFG,OAAUD,MAIVE,EAAW,IAAIC,IACG,WAATH,IACTE,EAAW,IAAIE,KARG,SAUDC,YAAgBhC,EAAM6B,GAVrB,yDAAH,sDAabI,EAAW,SAACR,GAChB,MAEIA,EADFG,OAAUD,EADZ,EACYA,KAAMO,EADlB,EACkBA,MAEL,UAATP,EACFV,EAASiB,GACS,aAATP,GACTR,EAAYe,IAIVC,EAAQ,uCAAG,WAAOV,GAAP,SAAAC,EAAA,yDACfD,EAAMW,iBADS,UAIThB,EAJS,gCAKEiB,YAA+BrC,EAAMgB,EAAOE,GAL9C,sDAOEoB,YAA2BtC,EAAMgB,EAAOE,GAP1C,yEAUbK,EAAS,KAAMgB,SAVF,0DAAH,sDAcd,OACE,gCACE,uBAAMJ,SAAUA,EAAhB,UACE,uBACER,KAAK,QACLO,MAAOlB,EACPiB,SAAUA,EACVO,KAAK,QACLC,YAAY,QACZC,UAAQ,IAEV,uBACEf,KAAK,WACLO,MAAOhB,EACPe,SAAUA,EACVO,KAAK,WACLC,YAAY,WACZC,UAAQ,IAEV,uBAAOF,KAAK,SAASN,MAAOd,EAAa,iBAAmB,WAC3DE,KAEH,sBAAMqB,QA7DY,kBAAMtB,GAAc,SAACuB,GAAD,OAAWA,MA6DjD,SACGxB,EAAa,UAAY,mBAE5B,gCACE,wBAAQuB,QAASnB,EAAeG,KAAK,SAArC,kCAGA,wBAAQgB,QAASnB,EAAeG,KAAK,SAArC,yC,QCrBOkB,EAzDD,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzB,EAA8BhC,oBAAS,GAAvC,mBAAOiC,EAAP,KAAgBC,EAAhB,KACA,EAAgClC,mBAAS+B,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAa,uCAAG,8BAAA3B,EAAA,0DACT4B,OAAOC,QAAQ,6BADN,uBAGZC,EAAWC,YAAI/C,EAAO,SAAUoC,EAASY,IAH7B,SAIZC,YAAUH,GAJE,UAKa,KAA3BV,EAASc,cALK,uBAMVC,EAAgBC,YAAIlD,EAAgBkC,EAASc,eANnC,SAOVG,YAAaF,GAPH,2CAAH,qDAmBb1B,EAAQ,uCAAG,WAAOV,GAAP,SAAAC,EAAA,6DACfD,EAAMW,iBADS,SAET4B,YAAUP,YAAI/C,EAAO,SAAUoC,EAASY,IAAK,CAAER,KAAMC,IAF5C,OAGfF,GAAW,GAHI,2CAAH,sDAKRgB,EAAgB,kBAAMhB,GAAW,SAACL,GAAD,OAAWA,MAElD,OACE,8BACGI,EACC,qCACE,iCACE,uBAAOd,MAAOiB,EAAUT,UAAQ,EAACT,SAnB1B,SAACR,GAChB,IACYS,EACRT,EADFG,OAAUM,MAEZkB,EAAYlB,MAgBJ,uBAAOS,QAASR,EAAUK,KAAK,SAASN,MAAM,qBAEhD,wBAAQS,QAASsB,EAAjB,uBAGF,qCACE,6BAAKnB,EAASI,OACbJ,EAASc,eACR,qBAAKM,IAAKpB,EAASc,cAAeO,MAAM,OAAOC,OAAO,SAEvDrB,GACC,qCACE,wBAAQJ,QAASU,EAAjB,0BACA,wBAAQV,QAASsB,EAAjB,+BAlBAnB,EAASY,K,QC6CRW,EA1EM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,EAA0BvD,mBAAS,IAAnC,mBAAOwD,EAAP,KAAcC,EAAd,KACA,EAAoCzD,mBAAS,IAA7C,mBAAO0D,EAAP,KAAmBC,EAAnB,KAEMvC,EAAQ,uCAAG,WAAOV,GAAP,mBAAAC,EAAA,yDACfD,EAAMW,iBAEFwB,EAAgB,GACD,KAAfa,EAJW,wBAKPE,EAAgBb,YAAIlD,EAAD,UAAoB0D,EAAQM,IAA5B,YAAmCC,gBAL/C,SAMUC,YACrBH,EACAF,EACA,YATW,cAMPM,EANO,gBAWSC,YAAeD,EAASjB,KAXjC,OAWbF,EAXa,gCAaTqB,YAAOC,YAAWxE,EAAO,UAAW,CACxCwC,KAAMqB,EACNY,UAAWC,KAAKC,MAChBC,UAAWhB,EAAQM,IACnBhB,kBAjBa,QAmBfY,EAAS,IACTE,EAAc,IApBC,4CAAH,sDAiDd,OACE,uBAAMvC,SAAUA,EAAhB,UACE,uBACED,MAAOqC,EACPtC,SA9BW,SAACR,GAChBA,EAAMW,iBACN,IACYF,EACRT,EADFG,OAAUM,MAEZsC,EAAStC,IA0BLM,KAAK,OACLC,YAAY,6BACZ8C,UAAW,MAEb,uBAAO/C,KAAK,OAAOgD,OAAO,UAAUvD,SAxBnB,SAACR,GACpB,IAGMgE,EADFhE,EADFG,OAAU8D,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClB,IACmBC,EACfD,EADFE,cAAiBD,OAEnBrB,EAAcqB,IAEhBJ,EAAOM,cAAcR,MAanB,uBAAOjD,KAAK,SAASN,MAAM,UAC1BuC,GACC,gCACE,qBAAKP,IAAKO,EAAYN,MAAM,OAAOC,OAAO,SAC1C,wBAAQzB,QAhCU,WACxB+B,EAAc,KA+BR,0BCvCKwB,EA5BF,SAAC,GAAiB,IAAf5B,EAAc,EAAdA,QACd,EAA4BvD,mBAAS,IAArC,mBAAOoF,EAAP,KAAeC,EAAf,KAYA,OAVAC,qBAAU,WACRC,YAAWpB,YAAWxE,EAAO,WAAW,SAAC6F,GACvC,IAAMC,EAAWD,EAASE,KAAKC,KAAI,SAAClD,GAAD,oBACjCE,GAAIF,EAASE,IACVF,EAASmD,WAEdP,EAAUI,QAEX,IAGD,qCACE,cAAC,EAAD,CAAclC,QAASA,IACvB,8BACG6B,EAAOO,KAAI,SAACnC,GAAD,OACV,cAAC,EAAD,CACEzB,SAAUyB,EAEVxB,QAASwB,EAAMe,YAAchB,EAAQM,KADhCL,EAAMb,aCTRkD,EAfI,SAAC,GAAiB,IAAftC,EAAc,EAAdA,QACpB,OACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMuC,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,WAAT,SAAqBvC,EAAQwC,sBC8BxBC,EApCC,SAAC,GAA8B,IAA5BzC,EAA2B,EAA3BA,QAAS0C,EAAkB,EAAlBA,YACpBC,EAAUC,cAChB,EAA4CnG,mBAASuD,EAAQwC,aAA7D,mBAAOK,EAAP,KAAuBC,EAAvB,KAaMjF,EAAQ,uCAAG,WAAOV,GAAP,SAAAC,EAAA,yDACfD,EAAMW,iBACFkC,EAAQwC,cAAgBK,EAFb,gCAGPE,YAAcrH,EAAKsH,YAAa,CACpCR,YAAaK,IAJF,OAMbH,IANa,2CAAH,sDAUd,OACE,qCACE,iCACE,uBAAO/E,SApBI,SAACR,GAChB,IACYS,EACRT,EADFG,OAAUM,MAEZkF,EAAkBlF,IAgBaM,KAAK,OAAOC,YAAY,iBACnD,uBAAOD,KAAK,SAASN,MAAM,iBAAiBS,QAASR,OAEvD,wBAAQQ,QA5BU,WACpB4E,YAAQvH,GACRiH,EAAQO,KAAK,MA0BX,wBCLSC,EAzBG,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYpD,EAA2B,EAA3BA,QAAS0C,EAAkB,EAAlBA,YACxC,OACE,eAAC,IAAD,WACGU,GAAc,cAAC,EAAD,CAAYpD,QAASA,IACpC,cAAC,IAAD,UACGoD,EACC,qCACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAMtD,QAASA,MAEjB,cAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,WAAlB,SACE,cAAC,EAAD,CAAStD,QAASA,EAAS0C,YAAaA,SAI5C,cAAC,IAAD,CAAOW,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,Y,QCkBGC,MAnCf,WACE,MAAwB9G,oBAAS,GAAjC,mBAAO+G,EAAP,KAAaC,EAAb,KACA,EAA8BhH,mBAAS,MAAvC,mBAAOuD,EAAP,KAAgB0D,EAAhB,KAkBA,OAXA3B,qBAAU,WACR4B,YAAmBjI,GAAM,SAACkI,GAEtBF,IADEE,GACS,CAAEtD,IAAKsD,EAAKtD,IAAKkC,YAAaoB,EAAKpB,cAIhDiB,GAAQ,QAET,IAGD,mCACGD,EACC,cAAC,EAAD,CACEJ,aAAcpD,EACdA,QAASA,EACT0C,YAtBY,WAClB,IAAMkB,EAAOlI,EAAKsH,YAClBU,EAAW,CAAEpD,IAAKsD,EAAKtD,IAAKkC,YAAaoB,EAAKpB,iBAuB1C,kBC7BRqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7E,SAAS8E,eAAe,W","file":"static/js/main.7d43ea25.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\n// import firebase from \"firebase/compat/app\";\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\nimport { getStorage } from \"firebase/storage\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\n// Initialize Firebas\r\n// const firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst app = initializeApp(firebaseConfig);\r\nexport const auth = getAuth();\r\nexport const getDB = getFirestore();\r\nexport const storageService = getStorage();\r\n\r\n// export const authService = getAuth();\r\n","import { useState } from \"react\";\r\nimport {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  GoogleAuthProvider,\r\n  GithubAuthProvider,\r\n  signInWithPopup,\r\n} from \"firebase/auth\";\r\nimport { auth } from \"fbase\";\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"Google\") {\r\n      provider = new GoogleAuthProvider();\r\n    } else if (name === \"Github\") {\r\n      provider = new GithubAuthProvider();\r\n    }\r\n    const data = await signInWithPopup(auth, provider);\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await createUserWithEmailAndPassword(auth, email, password);\r\n      } else {\r\n        data = await signInWithEmailAndPassword(auth, email, password);\r\n      }\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={onChange}\r\n          type=\"email\"\r\n          placeholder=\"Email\"\r\n          required\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={onChange}\r\n          type=\"paasword\"\r\n          placeholder=\"Password\"\r\n          required\r\n        />\r\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\r\n        {error}\r\n      </form>\r\n      <span onClick={toggleAccount}>\r\n        {newAccount ? \"Sign In\" : \"Create Account\"}\r\n      </span>\r\n      <div>\r\n        <button onClick={onSocialClick} name=\"Google\">\r\n          continue with google\r\n        </button>\r\n        <button onClick={onSocialClick} name=\"Github\">\r\n          continue with GitHub\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { getDB } from \"fbase\";\r\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\r\nimport { deleteObject, ref } from \"firebase/storage\";\r\nimport { storageService } from \"fbase\";\r\nimport { useState } from \"react\";\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"삭제요망?\");\r\n    if (ok) {\r\n      const document = doc(getDB, \"nweets\", nweetObj.id);\r\n      await deleteDoc(document);\r\n      if (nweetObj.attachmentURL !== \"\") {\r\n        const nweetImageRef = ref(storageService, nweetObj.attachmentURL);\r\n        await deleteObject(nweetImageRef);\r\n      }\r\n    }\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await updateDoc(doc(getDB, \"nweets\", nweetObj.id), { text: newNweet });\r\n    setEditing(false);\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n\r\n  return (\r\n    <div key={nweetObj.id}>\r\n      {editing ? (\r\n        <>\r\n          <form>\r\n            <input value={newNweet} required onChange={onChange} />\r\n            <input onClick={onSubmit} type=\"submit\" value=\"Upadate Value\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {nweetObj.attachmentURL && (\r\n            <img src={nweetObj.attachmentURL} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Nweet</button>\r\n              <button onClick={toggleEditing}>Edit Nweet</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nweet;\r\n","import { useState } from \"react\";\r\nimport { getDB, storageService } from \"fbase\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\r\nimport { collection, addDoc } from \"firebase/firestore\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    let attachmentURL = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\r\n      const response = await uploadString(\r\n        attachmentRef,\r\n        attachment,\r\n        \"data_url\"\r\n      );\r\n      attachmentURL = await getDownloadURL(response.ref);\r\n    }\r\n    await addDoc(collection(getDB, \"nweets\"), {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentURL,\r\n    });\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    event.preventDefault();\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onClearAttachment = () => {\r\n    setAttachment(\"\");\r\n  };\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={onSubmit}>\r\n      <input\r\n        value={nweet}\r\n        onChange={onChange}\r\n        type=\"text\"\r\n        placeholder=\"뭐 생각함?\"\r\n        maxLength={120}\r\n      />\r\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\r\n      <input type=\"submit\" value=\"Nweet\" />\r\n      {attachment && (\r\n        <div>\r\n          <img src={attachment} width=\"50px\" height=\"50px\" />\r\n          <button onClick={onClearAttachment}>Clear</button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import { useState, useEffect } from \"react\";\r\nimport { getDB } from \"fbase\";\r\nimport { collection, onSnapshot } from \"firebase/firestore\";\r\n\r\nimport Nweet from \"component/Nweet\";\r\nimport NweetFactory from \"component/NweetFactory\";\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    onSnapshot(collection(getDB, \"nweets\"), (snapshot) => {\r\n      const newArray = snapshot.docs.map((document) => ({\r\n        id: document.id,\r\n        ...document.data(),\r\n      }));\r\n      setNweets(newArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <NweetFactory userObj={userObj} />\r\n      <div>\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            nweetObj={nweet}\r\n            key={nweet.id}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Navigation = ({ userObj }) => {\r\n  return (\r\n    <nav>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">{userObj.displayName}</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import { auth, getDB } from \"fbase\";\r\nimport { signOut, updateProfile } from \"firebase/auth\";\r\nimport { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutClick = () => {\r\n    signOut(auth);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await updateProfile(auth.currentUser, {\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form>\r\n        <input onChange={onChange} type=\"text\" placeholder=\"display Name\" />\r\n        <input type=\"submit\" value=\"Update Profile\" onClick={onSubmit} />\r\n      </form>\r\n      <button onClick={onLogOutClick}>Logout</button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"route/Auth\";\r\nimport Home from \"route/Home\";\r\nimport Navigation from \"./Navigation\";\r\nimport Profile from \"route/Profile\";\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Route exact path=\"/\">\r\n            <Auth />\r\n          </Route>\r\n        )}\r\n        {/* <Redirect from=\"*\" to=\"/\" /> 리다이렉트 사용시 방법. exact path=\"/\" 이어야 하는데 로그아웃 시 exact path=\"/profile\" 인데 작동은 isLoggedIn = false 니 redirect 발동*/}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import AppRouter from \"component/Router\";\nimport { useState, useEffect } from \"react\";\nimport { auth } from \"fbase\";\nimport { onAuthStateChanged } from \"@firebase/auth\";\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  const refreshUser = () => {\n    const user = auth.currentUser;\n    setUserObj({ uid: user.uid, displayName: user.displayName });\n  };\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserObj({ uid: user.uid, displayName: user.displayName });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          isLoggedIn={!!userObj}\n          userObj={userObj}\n          refreshUser={refreshUser}\n        />\n      ) : (\n        \"initializing\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"component/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}